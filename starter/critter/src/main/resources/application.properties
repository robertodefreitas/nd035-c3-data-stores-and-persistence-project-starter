# Server port is arbitrary
spring.application.name=critter-api
server.port=8311

#debug=true
## DEBUG, INFO, WARN
logging.level.web=INFO
logging.level.org.springframework.web=INFO
logging.level.com.udacity.jdnd.course3.critter.pet=INFO
logging.level.com.udacity.jdnd.course3.critter.schedule=INFO
logging.level.com.udacity.jdnd.course3.critter.model.dao.user=DEBUG

## ==============================================

# Data Source Setup
# Note: Users must create a mysql db that they will reference here, create a user that has access to it on localhost
#       and provide the credentials below to access it

# uncomment the below lines to view sql output in console
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

## https://ittone.ma/ittone/java-spring-boot-is-not-creating-tables-automatically/
## https://stackoverflow.com/questions/67678311/spring-boot-is-not-creating-tables-automatically
spring.jpa.defer-datasource-initialization=true

## https://zetcode.com/springboot/postgresql/
## To avoid conflicts, we turn off automatic schema creation with
spring.jpa.hibernate.ddl-auto=none

## ==============================================

## https://www.spring-boot-blog.de/blog/spring-boot-und-postgresql/
spring.datasource.url=jdbc:postgresql://localhost:5411/udacity-p3-db
spring.datasource.username=user-udacity
spring.datasource.password=pw-udacity

## to use file data-postgres.sql instead data.sql
spring.datasource.platform=postgres

## ==============================================

#spring.h2.console.enabled=true
#spring.h2.console.path=/h2

#spring.datasource.url=jdbc:h2:mem:critter-db
#spring.datasource.username=sa
#spring.datasource.password=

## to use file data-h2.sql instead data.sql
#spring.datasource.platform=h2

## ==============================================

